input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            Convert(source Input) Output
        }

        type Input struct {
            name string
            Age int
            ignored string
        }
        type Output struct {
            name string
            Age int
        }
error: |-
    Error while creating converter method:
        func (github.com/jmattheis/goverter/execution.Converter).Convert(source github.com/jmattheis/goverter/execution.Input) github.com/jmattheis/goverter/execution.Output

    | github.com/jmattheis/goverter/execution.Input
    |
    |
    |
    source.???
    target.name
    |      |
    |      | string
    |
    | github.com/jmattheis/goverter/execution.Output

    Cannot set value for unexported field "name".

    Possible solutions:

    * Ignore the given field with:

          // goverter:ignore name

    * Convert the struct yourself and use goverter for converting nested structs / maps / lists.

    * Create a custom converter function (only works, if the struct with unexported fields is nested inside another struct)

          func CustomConvert(source github.com/jmattheis/goverter/execution.Input) github.com/jmattheis/goverter/execution.Output {
              // implement me
          }

          // goverter:extend CustomConvert
          type MyConverter interface {
              // ...
          }

    See https://github.com/jmattheis/goverter#extend-with-custom-implementation
